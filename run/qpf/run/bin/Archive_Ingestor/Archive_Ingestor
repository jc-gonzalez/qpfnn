#!/bin/bash
##############################################################################
# Ingest_LE1
# Script for the Ingestion of EUCLID LE1 Products
# The *Ingestion* is composed of two processes:
#  - *Archival* of the binary products into the DSS
#  - *Registration* of the Metadata into the EAS
# This scripts performs both operations
# NOTE: for the sake of this test, the
#-----------------------------------------------------------------------------
# Usage:  Ingest_LE1 {cfgFile}
##############################################################################

# Set I/O directories and files
baseScriptName=${BASH_SOURCE##*/}

usage() {
    echo "Usage: $baseScriptName {cfgFile}"
}

if [ $# -lt 1 ]; then
    usage
    exit 1
fi

cfgFile=$1
workDir=$(dirname $cfgFile)

# Parse cfg file contents
#
# Arguments for ingestion are:
# store  inputXMLfile|datafile|directory \
#        [--SDC=SDC_to_store_files] \
#        [--localdirectory=/path/to/local/files] \
#        [--environment=Euclid environment] \
#        [--noXML] \
#        [--username=username] \
#        [--password=password] \
#        [--createDDO] \
#        [--useoldfiles]
#
# - First line is the name of the product, no extension
productFile=$(head -1 $cfgFile)
# - Second line is SDC and environment
head -2 $cfgFile | tail -1 | read sdc ev
# no more arguments used

cd ${workDir}

binPath=/qlabin
log=${workDir}/log/${baseScriptName}.log
in=${workDir}/in

binFile=${in}/${productFile}.fits
metaFile=${in}/${productFile}.xml

# Run the ingest script, for binary product and metadata
python ${binPath}/ingest-jcg.py store ${binFile} --SDC=${sdc} --environment=${ev} 1>${log} 2>&1
python ${binPath}/ingest-jcg.py store ${metaFile} --SDC=${sdc} --environment=${ev} 1>${log} 2>&1
